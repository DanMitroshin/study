int partition(int * array, int p, int r){
    int pivot;
    if(array[p] > array[(r + p)/ 2] && array[(r + p)/ 2] < array[r])
        pivot = (r + p) / 2;
    else if(array[r] < array[p] && array[p] < array[(r + p)/ 2])
        pivot = p;
    else
        pivot = r;

    int tmp = array[pivot];
    array[pivot] = array[r];
    array[r] = tmp;

    int j = p;
    for(int i = p; i < r; i++)
        if(array[i] < array[r]){
            tmp = array[j];
            array[j] = array[i];
            array[i] = tmp;
            j++;
        }

    tmp = array[j];
    array[j] = array[r];
    array[r] = tmp;
    return j;
}

void quickSort(int * array, int p, int r){
    if(r <= p)
        return;
    int q = partition(array, p, r);
    quickSort(array, p, q - 1);
    quickSort(array, q + 1, r);
}
